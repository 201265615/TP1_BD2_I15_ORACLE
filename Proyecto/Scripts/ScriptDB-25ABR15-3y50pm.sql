-- Generated by Oracle SQL Developer Data Modeler 4.0.2.840
--   at:        2015-04-25 22:45:26 BST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c




DROP TABLE MVIALES.T_ARTICULOESTADOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_ARTICULOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_ARTICULOSCOTIZADOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_ARTICULOSCOTIZADOSHISTO CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_BITACORA CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_COMPONENTES CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_CONTACTO CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_COTIZACIONES CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_COTIZACIONESHISTO CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_COTIZACIONESTADOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_CUIDADES CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_DETALLEDIRECCION CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_EMPRESA CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_ESTADOSTIPOCAMBIOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_FACTURACOMPRAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_FAMILIAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_INDICEECONOMICOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_LINEASFACTURACOMPRAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_LISTAPRECIOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_LISTAPRECIOXARTICULOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_MARCAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_MESANIO CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_MONEDAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_PAISES CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_PERMISOUSUARIOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_PROVINCIAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_PROYECCIONESLISTAPRECIOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_TIPOCAMBIOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_TIPOCONTACTOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_TIPOEMPRESA CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_TIPOERRORES CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_TIPOUSUARIOS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_UNIDADMEDIDAS CASCADE CONSTRAINTS ;

DROP TABLE MVIALES.T_USUARIOS CASCADE CONSTRAINTS ;

DROP SEQUENCE MVIALES.SEQ_T_ARTICULOESTADOS ;

DROP SEQUENCE MVIALES.SEQ_T_BITACORA ;

DROP SEQUENCE MVIALES.SEQ_T_CONTACTO ;

DROP SEQUENCE MVIALES.SEQ_T_COTIZACIONES ;

DROP SEQUENCE MVIALES.SEQ_T_COTIZACIONESTADOS ;

DROP SEQUENCE MVIALES.SEQ_T_CUIDADES ;

DROP SEQUENCE MVIALES.SEQ_T_DETALLEDIRECCION ;

DROP SEQUENCE MVIALES.SEQ_T_EMPRESA ;

DROP SEQUENCE MVIALES.SEQ_T_ESTADOSTIPOCAMBIOS ;

DROP SEQUENCE MVIALES.SEQ_T_FACTURACOMPRAS ;

DROP SEQUENCE MVIALES.SEQ_T_FAMILIAS ;

DROP SEQUENCE MVIALES.SEQ_T_LISTAPRECIOS ;

DROP SEQUENCE MVIALES.SEQ_T_MARCAS ;

DROP SEQUENCE MVIALES.SEQ_T_MONEDAS ;

DROP SEQUENCE MVIALES.SEQ_T_PAISES ;

DROP SEQUENCE MVIALES.SEQ_T_PERMISOUSUARIOS ;

DROP SEQUENCE MVIALES.SEQ_T_PROVINCIAS ;

DROP SEQUENCE MVIALES.SEQ_T_TIPOCONTACTOS ;

DROP SEQUENCE MVIALES.SEQ_T_TIPOEMPRESA ;

DROP SEQUENCE MVIALES.SEQ_T_TIPOERRORES ;

DROP SEQUENCE MVIALES.SEQ_T_TIPOUSUARIOS ;

DROP SEQUENCE MVIALES.SEQ_T_UNIDADMEDIDAS ;

DROP SEQUENCE MVIALES.T_ARTICULOESTADOS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_BITACORA_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_CONTACTO_CODCONTACTO_SEQ ;

DROP SEQUENCE MVIALES.T_COTIZACIONESTADOS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_COTIZACIONES_NUMERO_SEQ ;

DROP SEQUENCE MVIALES.T_CUIDADES_CODCIUDAD_SEQ ;

DROP SEQUENCE MVIALES.T_DETALLEDIRECCION_CODDETALLE ;

DROP SEQUENCE MVIALES.T_ESTADOSTIPOCAMBIOS_CODIGO ;

DROP SEQUENCE MVIALES.T_FACTURACOMPRAS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_FAMILIAS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_INDICEECONOMICOS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES."T_IndiceEconomicos _CODIGO_SEQ" ;

DROP SEQUENCE MVIALES.T_LISTAPRECIOS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_MARCAS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_MONEDAS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_PAISES_CODPAIS_SEQ ;

DROP SEQUENCE MVIALES.T_PERMISOUSUARIOS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_PROVINCIAS_CODPROVINCIA_SEQ ;

DROP SEQUENCE MVIALES.T_TIPOCONTACTOS_CODTIPOCONTACT ;

DROP SEQUENCE MVIALES.T_TIPOEMPRESA_CODTIPOEMPRESA ;

DROP SEQUENCE MVIALES.T_TIPOERRORES_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_TIPOUSUARIOS_CODIGO_SEQ ;

DROP SEQUENCE MVIALES.T_UNIDADMEDIDAS_CODIGO_SEQ ;

DROP TABLESPACE PROYECTO ;

CREATE SMALLFILE TABLESPACE PROYECTO LOGGING ONLINE PERMANENT DEFAULT NOCOMPRESS EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1048576 FLASHBACK ON ;

CREATE USER MVIALES IDENTIFIED BY DEFAULT TABLESPACE PROYECTO QUOTA 52428800 ON PROYECTO ACCOUNT UNLOCK ;
  GRANT CONNECT,RESOURCE TO MVIALES ;
  GRANT
CREATE TRIGGER,
  CREATE VIEW,
  CREATE TABLE TO MVIALES ;

CREATE OR REPLACE TYPE MVIALES.MYWEBSERVICE1_RECARTICULO
AS
  OBJECT
  (
    CODIGO      VARCHAR2 (20) ,
    DESCRIPCION VARCHAR2 (40) ) FINAL ;
  /

CREATE OR REPLACE TYPE MVIALES.WSPLSQL_RECARTICULO
AS
  OBJECT
  (
    CODIGO      VARCHAR2 (20) ,
    DESCRIPCION VARCHAR2 (40) ) FINAL ;
  /


CREATE OR REPLACE PACKAGE MVIALES.MYWEBSERVICE1_PLSQL_WRAPPER AS
-- Declare the conversion functions the PL/SQL type PKG_ARTICULO.RECARTICULO
FUNCTION PL_TO_SQL0(aPlsqlItem PKG_ARTICULO.RECARTICULO)
RETURN MYWEBSERVICE1_RECARTICULO;
FUNCTION SQL_TO_PL0(aSqlItem MYWEBSERVICE1_RECARTICULO)
RETURN PKG_ARTICULO.RECARTICULO;
END MyWebService1_plsql_wrapper;
/


CREATE OR REPLACE PACKAGE MVIALES.PKG_ARTICULO AS

    -- -------------------------------------------------------------------------
    -- DECLARA TIPOS VISIBLES
    -- -------------------------------------------------------------------------
    TYPE RECARTICULO IS RECORD (CODIGO VARCHAR2(20), DESCRIPCION VARCHAR2(40));
    CURSOR CURARTICULO RETURN RECARTICULO;
    


    PROCEDURE SP_InsertarArticulo (
        IN_CODIGO IN VARCHAR2, 
        IN_DESCRIPCION IN VARCHAR2, 
        IN_UNDMEDIDA IN NUMBER, 
        IN_CODMARCA IN NUMBER,
        IN_MODELO IN VARCHAR2, 
        IN_CODFAMILIA IN NUMBER, 
        IN_CODESTARTICULO IN NUMBER,
        IN_CODUSERREGISTRO IN VARCHAR2,
        IN_CANTIDAD IN NUMBER, 
        IN_CANTMAXIMA IN NUMBER, 
        IN_CANTMINIMA IN NUMBER, 
        IN_PRECIOMERCDOLARES IN NUMBER);
  
    PROCEDURE SP_InsertarComponente (
        IN_CODIGOCOMPONENTE IN VARCHAR2,
        IN_CODIGOARTICULO IN VARCHAR2);
    
    PROCEDURE SP_ModificarArticulo (
        IN_CODIGO IN VARCHAR2, 
        IN_CODUSERREGISTRO IN VARCHAR2, 
        IN_PRECIOMERCDOLARES IN NUMBER);
    
    PROCEDURE SP_ModificarComponente (
        IN_CODCOMPONENTE IN VARCHAR2,
        IN_CODARTICULO IN VARCHAR2);
    
    PROCEDURE SP_BorrarComponente (
        IN_CODCOMPONENTE IN VARCHAR2,
        IN_CODARTICULO IN VARCHAR2);
    
    Procedure SP_GetArticulos;
    
    Procedure SP_GetComponentes;
    
    
    -- ============================================================================================
    -- TESTING RETURNS
    -- ============================================================================================
    FUNCTION FUN_GETARTICULOS_V3 RETURN RECARTICULO;
    -- ============================================================================================  

END PKG_Articulo;
/


CREATE OR REPLACE PACKAGE MVIALES.WSPLSQL_PLSQL_WRAPPER AS
-- Declare the conversion functions the PL/SQL type PKG_ARTICULO.RECARTICULO
FUNCTION PL_TO_SQL0(aPlsqlItem PKG_ARTICULO.RECARTICULO)
RETURN WSPLSQL_RECARTICULO;
FUNCTION SQL_TO_PL0(aSqlItem WSPLSQL_RECARTICULO)
RETURN PKG_ARTICULO.RECARTICULO;
END WSPLSQL_plsql_wrapper;
/

CREATE OR REPLACE DIRECTORY TMP
AS
  '/tmp' ;
  GRANT READ ON DIRECTORY TMP TO "PUBLIC" ;

CREATE SEQUENCE MVIALES.SEQ_T_ARTICULOESTADOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_BITACORA INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_CONTACTO INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_COTIZACIONES INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_COTIZACIONESTADOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_CUIDADES INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_DETALLEDIRECCION INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_EMPRESA INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_ESTADOSTIPOCAMBIOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_FACTURACOMPRAS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_FAMILIAS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_LISTAPRECIOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_MARCAS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_MONEDAS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_PAISES INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_PERMISOUSUARIOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_PROVINCIAS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_TIPOCONTACTOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_TIPOEMPRESA INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_TIPOERRORES INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_TIPOUSUARIOS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.SEQ_T_UNIDADMEDIDAS INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE MVIALES.T_ARTICULOESTADOS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_BITACORA_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_CONTACTO_CODCONTACTO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_COTIZACIONESTADOS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_COTIZACIONES_NUMERO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_CUIDADES_CODCIUDAD_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_DETALLEDIRECCION_CODDETALLE INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_ESTADOSTIPOCAMBIOS_CODIGO INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_FACTURACOMPRAS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_FAMILIAS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_INDICEECONOMICOS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES."T_IndiceEconomicos _CODIGO_SEQ" INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_LISTAPRECIOS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_MARCAS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_MONEDAS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_PAISES_CODPAIS_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_PERMISOUSUARIOS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_PROVINCIAS_CODPROVINCIA_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_TIPOCONTACTOS_CODTIPOCONTACT INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_TIPOEMPRESA_CODTIPOEMPRESA INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_TIPOERRORES_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_TIPOUSUARIOS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.T_UNIDADMEDIDAS_CODIGO_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE ORDER ;

CREATE TABLE MVIALES.T_ARTICULOS
  (
    CODIGO            VARCHAR2 (20 BYTE) NOT NULL ,
    DESCRIPCION       VARCHAR2 (40 BYTE) NOT NULL ,
    UNDMEDIDA         NUMBER (3) NOT NULL ,
    CODMARCA          NUMBER (3) NOT NULL ,
    MODELO            VARCHAR2 (15 BYTE) NOT NULL ,
    FECREGISTRO       DATE NOT NULL ,
    CODFAMILIA        NUMBER (3) NOT NULL ,
    CODESTARTICULO    NUMBER (3) NOT NULL ,
    CODUSERREGISTRO   VARCHAR2 (10 BYTE) NOT NULL ,
    CANTIDAD          NUMBER (10) NOT NULL ,
    CANTMAXIMA        NUMBER (10) NOT NULL ,
    CANTMINIMA        NUMBER (10) NOT NULL ,
    PRECIOMERCDOLARES NUMBER (17,2) NOT NULL ,
    FECHAACTPRECIO    DATE NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_ARTICULOS_PK ON MVIALES.T_ARTICULOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_ARTICULOS ADD CONSTRAINT T_ARTICULOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_ARTICULOS_PK ;

CREATE OR REPLACE FUNCTION MVIALES.SP(
    X IN NUMBER)
  RETURN types.ref_cursor
AS
  cursorArt types.ref_cursor;
BEGIN
  OPEN cursorArt FOR SELECT descripcion FROM t_articulos;
  RETURN cursorArt;
END SP;
/


CREATE OR REPLACE PROCEDURE MVIALES.SP_GETARTIC_V2(
    CURRESP OUT SYS_REFCURSOR
) AS BEGIN
  OPEN CURRESP FOR
    SELECT TA.DESCRIPCION FROM T_ARTICULOS TA;
END;
/

CREATE OR REPLACE FUNCTION MVIALES.SP_TEST_GETARTIC_V2
  RETURN SYS_REFCURSOR
AS
  CURRESP SYS_REFCURSOR;
BEGIN
  SP_GETARTIC_V2(CURRESP);
  RETURN CURRESP;
END;
/

CREATE TABLE MVIALES.T_COMPONENTES
  (
    CODCOMPONENTE VARCHAR2 (20 BYTE) NOT NULL ,
    CODARTICULO   VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;


CREATE OR REPLACE Procedure MVIALES.SP_BORRARCOMPONENTE (IN_CODCOMPONENTE IN VARCHAR2,IN_CODARTICULO IN VARCHAR2)

AS
BEGIN
  IF(IN_CODARTICULO IS NULL) THEN
          DELETE FROM  t_componentes
          WHERE CODCOMPONENTE = IN_CODCOMPONENTE;
        ELSE
          DELETE FROM  t_componentes
          WHERE CODCOMPONENTE = IN_CODCOMPONENTE AND CODARTICULO = IN_CODARTICULO;
  END IF;

END;
/


CREATE OR REPLACE Procedure MVIALES.SP_GETARTICULOS
IS
      Var_codArticulo VARCHAR2(20);
      Var_descripcion VARCHAR2(40);
      Var_codUnidMed VARCHAR2(40);
      Var_codMarca NUMBER(3);
      Var_modelo VARCHAR2(15);
      Var_fechaReg DATE;
      Var_codFamilia NUMBER(3);
      Var_codEstArticulo NUMBER(3);
      Var_codUserRegistro VARCHAR2(10);
      Var_Cant NUMBER(10);
      Var_CantMax NUMBER(10);
      Var_CantMin NUMBER(10);
      Var_PrecioMerDolar NUMBER(17,2);
      Var_FechaActPrecio DATE;
      
      CURSOR cursorArticulos IS SELECT codigo,descripcion,undMedida,codMarca,modelo,fecRegistro,codFamilia,
      codEstArticulo,codUserRegistro,cantidad,cantMaxima,cantMinima,precioMercDolares,fechaActPrecio FROM t_articulos;

BEGIN
      open cursorArticulos;
      loop
        fetch cursorArticulos into Var_codArticulo,Var_descripcion,Var_codUnidMed,Var_codMarca,Var_modelo,Var_fechaReg,
        Var_codFamilia,Var_codEstArticulo,Var_codUserRegistro,Var_Cant,Var_CantMax,Var_CantMin,Var_PrecioMerDolar,Var_FechaActPrecio; 
        exit when cursorArticulos %notfound;
        DBMS_OUTPUT.PUT_LINE(Var_descripcion); --solo para verifcar
      end loop;
      close cursorArticulos;
      --RETURN;
END SP_GetArticulos;
/


CREATE OR REPLACE Procedure MVIALES.SP_GETCOMPONENTES 
IS
      Var_codComponente VARCHAR2(20);
      Var_codArticulo VARCHAR2(20);
      
      CURSOR cursorComponentes IS SELECT codComponente,codArticulo FROM t_componentes;

BEGIN
      open cursorComponentes;
      loop
        fetch cursorComponentes into Var_codComponente,Var_codArticulo; 
        exit when cursorComponentes %notfound;
        DBMS_OUTPUT.PUT_LINE(Var_codComponente); --solo para verifcar
      end loop;
      close cursorComponentes;
      commit;
END SP_GetComponentes;
/


CREATE OR REPLACE Procedure MVIALES.SP_INSERTARARTICULO (IN_CODIGO IN VARCHAR2, IN_DESCRIPCION IN VARCHAR2, IN_UNDMEDIDA IN NUMBER, IN_CODMARCA IN NUMBER,
                                      IN_MODELO IN VARCHAR2, IN_CODFAMILIA IN NUMBER, IN_CODESTARTICULO IN NUMBER,
                                      IN_CODUSERREGISTRO IN VARCHAR2, IN_CANTIDAD IN NUMBER, IN_CANTMAXIMA IN NUMBER, 
                                      IN_CANTMINIMA IN NUMBER, IN_PRECIOMERCDOLARES IN NUMBER)

AS
BEGIN

INSERT INTO t_articulos(CODIGO, DESCRIPCION, UNDMEDIDA, CODMARCA, MODELO, FECREGISTRO, CODFAMILIA, CODESTARTICULO, CODUSERREGISTRO, CANTIDAD, CANTMAXIMA, CANTMINIMA, PRECIOMERCDOLARES, FECHAACTPRECIO)
VALUES(IN_CODIGO, IN_DESCRIPCION, IN_UNDMEDIDA, IN_CODMARCA, IN_MODELO, sysdate, IN_CODFAMILIA, IN_CODESTARTICULO, IN_CODUSERREGISTRO, IN_CANTIDAD, IN_CANTMAXIMA, IN_CANTMINIMA, IN_PRECIOMERCDOLARES, sysdate);
    
END;
/


CREATE OR REPLACE Procedure MVIALES.SP_INSERTARCOMPONENTE (IN_CODIGOCOMPONENTE IN VARCHAR2,IN_CODIGOARTICULO IN VARCHAR2 )

AS
BEGIN

INSERT INTO t_componentes(CODCOMPONENTE,CODARTICULO)
VALUES (IN_CODIGOCOMPONENTE, IN_CODIGOARTICULO);

END;
/


CREATE OR REPLACE Procedure MVIALES.SP_MODIFICARARTICULO (IN_CODIGO IN VARCHAR2, IN_CODUSERREGISTRO IN VARCHAR2, IN_PRECIOMERCDOLARES IN NUMBER)

AS
BEGIN

UPDATE  t_articulos 
      SET CODUSERREGISTRO = IN_CODUSERREGISTRO,
          PRECIOMERCDOLARES = IN_PRECIOMERCDOLARES,
          FECHAACTPRECIO = sysdate
          WHERE CODIGO = IN_CODIGO;
      
END;
/


CREATE OR REPLACE Procedure MVIALES.SP_MODIFICARCOMPONENTE (IN_CODCOMPONENTE IN VARCHAR2,IN_CODARTICULO IN VARCHAR2)

AS
BEGIN

UPDATE  t_componentes
      SET CODARTICULO = IN_CODARTICULO
          WHERE CODCOMPONENTE = IN_CODCOMPONENTE;
      
END;
/

CREATE TABLE MVIALES.T_TIPOCAMBIOS
  (
    CODMONEDA1         NUMBER (3) NOT NULL ,
    CODMONEDA2         NUMBER (3) NOT NULL ,
    MONTO              NUMBER (17,2) NOT NULL ,
    CODINDICEECONOMICO NUMBER (3) NOT NULL ,
    ESTADO             NUMBER (3) NOT NULL ,
    MES                NUMBER (2) NOT NULL ,
    ANIO               NUMBER (4) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;


CREATE OR REPLACE PROCEDURE MVIALES.SP_OBTENERTC(
  PDATE IN DATE,
  PRESULT OUT NUMBER
) IS
  MES NUMBER(2);
  ANIO NUMBER(4);
BEGIN
  -- OBTENER EL MES Y ANIO DE LA FECHA
  SELECT 
    EXTRACT(MONTH FROM PDATE),EXTRACT(YEAR FROM PDATE) INTO MES,ANIO
  FROM DUAL;
  -- SELECCIONE EL TIPO DE CAMBIO DE LA TABLA DE TIPOS DE CAMBIO
  SELECT
    TC.MONTO INTO PRESULT
  FROM T_TIPOCAMBIOS TC
  WHERE TC.MES = MES AND TC.ANIO = ANIO;
END;
/

CREATE TABLE MVIALES.T_LISTAPRECIOXARTICULOS
  (
    CODLISTAPRECIO NUMBER (3) NOT NULL ,
    CODARTICULO    VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_LISTAPRECIOXARTICULOS_PK ON MVIALES.T_LISTAPRECIOXARTICULOS
  (
    CODLISTAPRECIO ASC , CODARTICULO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_LISTAPRECIOXARTICULOS ADD CONSTRAINT T_LISTAPRECIOXARTICULOS_PK PRIMARY KEY ( CODLISTAPRECIO, CODARTICULO ) USING INDEX MVIALES.T_LISTAPRECIOXARTICULOS_PK ;

CREATE TABLE MVIALES.T_LISTAPRECIOS
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (40 BYTE) NOT NULL ,
    GASTOADMIN  NUMBER (3) NOT NULL ,
    GASTOOTROS  NUMBER (3) NOT NULL ,
    UTILIDAD    NUMBER (3) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_LISTAPRECIOS_PK ON MVIALES.T_LISTAPRECIOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_LISTAPRECIOS ADD CONSTRAINT T_LISTAPRECIOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_LISTAPRECIOS_PK ;

CREATE TABLE MVIALES.T_PROYECCIONESLISTAPRECIOS
  (
    CODARTICULO              VARCHAR2 (20 BYTE) NOT NULL ,
    CODLISTAPRECIOS          NUMBER (3) NOT NULL ,
    MES                      NUMBER (2) NOT NULL ,
    ANIO                     NUMBER (4) NOT NULL ,
    TIPOCAMBIOPROYECT        NUMBER (17,2) NOT NULL ,
    PRECIOMERCDOLARESPROYECT NUMBER (17,2) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;


CREATE OR REPLACE procedure MVIALES.SP_PROYECCIONGENERAR (
    PCODLISTAPRECIO in number,
    PNUMMESES in number,
    PMSGRESPUESTA OUT VARCHAR2
) is
    -- Define variables utilizadas para los calculos
    PORC1 number(3);
    PORC2 number(3);
    PORC3 number(3);
    SUMPORC NUMBER(3);
    SBTPORC NUMBER(17,2);
    CODARTICULO VARCHAR2(20);
    PRCARTICULO NUMBER(17,2);
    MONTOTC NUMBER(17,2);
    SBTPRECIOART NUMBER(17,2);
    TPRECIOART NUMBER(17,2);
    MES NUMBER(2);
    ANIO NUMBER(3);
    CONTA NUMBER(5);
    NEWFECHA DATE;
    -- OBTENER LOS PRECIOS DE LOS ARTICULOS ASOCIADOS A LA LISTA DE PRECIOS 
    -- CURSOR DE PRECIO DE ARTICULOS
    CURSOR CURPRECIOARTIC IS
    SELECT
      ARTIC.CODIGO,
      ARTIC.PRECIOMERCDOLARES
    FROM T_LISTAPRECIOXARTICULOS LPXA INNER JOIN T_ARTICULOS ARTIC ON (LPXA.CODARTICULO = ARTIC.CODIGO)
    WHERE LPXA.CODLISTAPRECIO = PCODLISTAPRECIO;
begin
    -- OBTENER LOS PORCENTAJES DE LA LISTA DE PRECIO
    SELECT
      lpr.gastoAdmin,lpr.gastoOtros,lpr.utilidad INTO PORC1, PORC2, PORC3
    FROM T_ListaPrecios lpr
    WHERE lpr.codigo = PCODLISTAPRECIO;
    PMSGRESPUESTA := '' + 'Obtenido porcentajes\n';

    -- CALCULAR TOTAL DE PORCENTAJES
    SUMPORC := PORC1 + PORC2 + PORC3;
    SBTPORC := SUMPORC / 100;
    SBTPORC := SBTPORC + 1;
    PMSGRESPUESTA := PMSGRESPUESTA + 'Calculado subtotal de porcentajes\n';

    -- PARA CADA ARTICULO EN EL CURSOR, CALCULAR SU PRECIO
    OPEN CURPRECIOARTIC;
    LOOP
      -- EXTRAE DATOS DEL ARTICULO
      FETCH CURPRECIOARTIC INTO CODARTICULO, PRCARTICULO;
      IF (CURPRECIOARTIC%FOUND) THEN
        PMSGRESPUESTA := PMSGRESPUESTA + 'Dato ok en cursor\n';
        -- INICIALIZA CALCULO DE PRECIO PARA LA CANTIDAD DE MESES ESPECIFICADA
        CONTA := 0;
        WHILE (CONTA < PNUMMESES)
        LOOP
          -- INCREMENTA UN MES
          SELECT 
            ADD_MONTHS(sysdate,CONTA) INTO NEWFECHA 
          FROM DUAL;
          -- OBTENER EL MONTO DE TIPO DE CAMBIO PARA ESE MES
          SP_OBTENERTC(NEWFECHA, MONTOTC);
          -- CALCULAR SUBTOTAL DEL PRECIO DEL ARTICULO
          SBTPRECIOART := MONTOTC * PRCARTICULO;
          -- CALCULAR TOTAL DEL PRECIO DEL ARTICULO (APLICA PORCENTAJES)
          TPRECIOART := SBTPRECIOART * (1 + SBTPORC);
          -- EXTRAE EL MES Y EL ANIO DE LA FECHA
          SELECT 
            EXTRACT(MONTH FROM NEWFECHA),EXTRACT(YEAR FROM NEWFECHA) INTO MES,ANIO
          FROM DUAL;
          -- INSERTA UNA FILA DE PROYECCIONES
          INSERT INTO T_PROYECCIONESLISTAPRECIOS VALUES (CODARTICULO, PCODLISTAPRECIO, MES, ANIO, MONTOTC, TPRECIOART);
          -- SIGUE CON EL SIGUIENTE MES DEL MISMO ARTICULO
          CONTA := CONTA + 1;
        END LOOP;
      ELSE
        PMSGRESPUESTA := PMSGRESPUESTA + 'No se encontro datos en cursor\n';
      END IF;
    EXIT WHEN CURPRECIOARTIC %NOTFOUND;
    END LOOP;
End;
/


CREATE OR REPLACE PROCEDURE MVIALES.SP_PROYECCIONTC1MES(
    PNUMVALREALES IN NUMBER,
    PDATE IN DATE,
    -- PARA INSERT SOLAMENTE
    PCODMONEDA1 IN NUMBER,
    PCODMONEDA2 IN NUMBER,
    PCODIDECONO IN VARCHAR2,
    PNEXTTC OUT NUMBER
) IS
  MES NUMBER(2);
  ANIO NUMBER(4);
  CURTC NUMBER(17,2);     -- VALOR DEL TC DE LA FECHA
  TC0 NUMBER(17,2);       -- VARIABLE DE CONTROL DE MONTO DE TIPO DE CAMBIO (MININUENDO)
  TC1 NUMBER(17,2);       -- VARIABLE DE CONTROL DE MONTO DE TIPO DE CAMBIO (SUSTRAENDO)
  DIFF NUMBER(17,2);      -- VARIABLE DE CONTROL DE MONTO (DIFERENCIA ENTRE MONTOS DE 2 MESES CONSECUTIVOS)
  NEWFECHA DATE;          -- NUEVA FECHA DE DONDE OBTENER EL MONTO DEL TIPO DE CAMBIO
  CONTA NUMBER(10);       -- CONTROL DEL BUCLE
BEGIN
  -- INICIALIZA VARIABLES
  -- OBTENER EL TIPO DE CAMBIO DEL MES ACTUAL
  SP_OBTENERTC(SYSDATE, CURTC);
  TC0 := 0.0;
  TC1 := 0.0;
  CONTA := 0;
  DIFF := 0.0;
  -- BUCLE DE RECORRIDO EN LA TABLA TC SEGUN EL NUMERO DE VALORES REALES
  WHILE (CONTA < PNUMVALREALES)
  LOOP
    -- OBTIENE EL TIPO DE CAMBIO DEL MES ACTUAL
    SELECT 
      ADD_MONTHS(sysdate,- CONTA) INTO NEWFECHA 
    FROM DUAL;
    SP_OBTENERTC(NEWFECHA,TC0);
    -- OBTIENE EL TIPO DE CAMBIO DEL MES ANTERIOR
    SELECT 
      ADD_MONTHS(sysdate,- (CONTA+1)) INTO NEWFECHA 
    FROM DUAL;
    SP_OBTENERTC(NEWFECHA,TC1);
    -- CALCULA DIFERENCIAS
    DIFF := DIFF + (TC0 - TC1);
    CONTA := CONTA + 1;
  END LOOP;
  -- CALCULA EL PROMEDIO
  DIFF := (DIFF / PNUMVALREALES);
  -- CALCULA EL TIPO DE CAMBIO PARA EL SIGUIENTE MES
  CURTC := (CURTC + DIFF);
  PNEXTTC := CURTC;
  
  -- INSERTAR EL MONTO COMO PROYECTADO EN LA TABLA DE MONTOS
  SELECT 
    ADD_MONTHS(sysdate,(CONTA+1)) INTO NEWFECHA 
  FROM DUAL;
  SELECT 
    EXTRACT(MONTH FROM NEWFECHA),EXTRACT(YEAR FROM NEWFECHA) INTO MES,ANIO
  FROM DUAL;
  -- INSERTAR EN LA TABLA DE MESANIO :'( NOP, PUEDE DAR ERROR DE LLAVE DUPLICADA
  -- INSERT INTO T_MESANIO VALUES (MES,ANIO);
  -- INSERTAR EN LA TABLA DE TIPOS DE CAMBIOS
  INSERT INTO T_TIPOCAMBIOS VALUES (PCODMONEDA1, PCODMONEDA2, PNEXTTC, PCODIDECONO, 2, MES, ANIO);
END;
/


CREATE OR REPLACE PROCEDURE MVIALES.SP_PROYECCIONTCNMESES(
  PNUMMESES IN NUMBER,
  PNUMVALREALES IN NUMBER,
  -- PARA INSERT SOLAMENTE
  PCODMONEDA1 IN NUMBER,
  PCODMONEDA2 IN NUMBER,
  PCODIDECONO IN VARCHAR2
) IS
  CONTA NUMBER(10);
  PMONTO NUMBER(17,2);
  NEWFECHA DATE;
BEGIN
  CONTA := 0;
  PMONTO := 0;
  WHILE (CONTA < PNUMMESES)
  LOOP
    -- INCREMENTA UN MES
    SELECT 
      ADD_MONTHS(sysdate,CONTA) INTO NEWFECHA 
    FROM DUAL;
    -- CALCULA EL TC PARA ESE MES
    SP_PROYECCIONTC1MES(PNUMVALREALES, NEWFECHA, PCODMONEDA1, PCODMONEDA2, PCODIDECONO, PMONTO); 
    CONTA := CONTA + 1;
  END LOOP;
END;
/

CREATE TABLE MVIALES.T_ARTICULOESTADOS
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_ARTICULOESTADOS_PK ON MVIALES.T_ARTICULOESTADOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_ARTICULOESTADOS ADD CONSTRAINT T_ARTICULOESTADOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_ARTICULOESTADOS_PK ;

CREATE TABLE MVIALES.T_ARTICULOSCOTIZADOS
  (
    NUMCOTIZACION   NUMBER (10) NOT NULL ,
    CODARTICULO     VARCHAR2 (20 BYTE) NOT NULL ,
    UNDMEDIDA       NUMBER (3) NOT NULL ,
    CANTIDAD        NUMBER (10) NOT NULL ,
    PORCENDESCUENTO NUMBER (2) NOT NULL ,
    COSTOUNITARIO   NUMBER (17,2) NOT NULL ,
    COSTOGRABADO    NUMBER (17,2) NOT NULL ,
    MONTOLINEA      NUMBER (17,2) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_ARTICULOSCOTIZADOS_PK ON MVIALES.T_ARTICULOSCOTIZADOS
  (
    NUMCOTIZACION ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_ARTICULOSCOTIZADOS ADD CONSTRAINT T_ARTICULOSCOTIZADOS_PK PRIMARY KEY ( NUMCOTIZACION ) USING INDEX MVIALES.T_ARTICULOSCOTIZADOS_PK ;

CREATE TABLE MVIALES.T_ARTICULOSCOTIZADOSHISTO
  (
    NUMCOTIZACION   NUMBER (10) NOT NULL ,
    CODARTICULO     VARCHAR2 (20 BYTE) NOT NULL ,
    UNDMEDIDA       NUMBER (3) NOT NULL ,
    CANTIDAD        NUMBER (10) NOT NULL ,
    PORCENDESCUENTO NUMBER (2) NOT NULL ,
    COSTOUNITARIO   NUMBER (17,2) NOT NULL ,
    COSTOGRABADO    NUMBER (17,2) NOT NULL ,
    MONTOLINEA      NUMBER (17,2) NOT NULL
  )
  PCTFREE 28 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 245760 NEXT 122880 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
ALTER TABLE MVIALES.T_ARTICULOSCOTIZADOSHISTO ADD CONSTRAINT T_ARTICULOSCOTIZADOSHISTO_PK PRIMARY KEY ( NUMCOTIZACION ) USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE PROYECTO LOGGING STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT ) ;

CREATE TABLE MVIALES.T_BITACORA
  (
    CODIGO       NUMBER (10) NOT NULL ,
    CODUSER      VARCHAR2 (10 BYTE) NOT NULL ,
    CODTIPOERROR NUMBER (3) NOT NULL ,
    FECHAHORA    DATE NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_BITACORA_PK ON MVIALES.T_BITACORA
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_BITACORA ADD CONSTRAINT T_BITACORA_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_BITACORA_PK ;

CREATE TABLE MVIALES.T_CONTACTO
  (
    CODCONTACTO     NUMBER (3) NOT NULL ,
    CODTIPOCONTACTO NUMBER (3) NOT NULL ,
    VALOR           VARCHAR2 (50 BYTE) NOT NULL ,
    CODEMPRESA      NUMBER (10) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_CONTACTO_PK ON MVIALES.T_CONTACTO
  (
    CODCONTACTO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_CONTACTO ADD CONSTRAINT T_CONTACTO_PK PRIMARY KEY ( CODCONTACTO ) USING INDEX MVIALES.T_CONTACTO_PK ;

CREATE TABLE MVIALES.T_COTIZACIONES
  (
    NUMERO          NUMBER (10) NOT NULL ,
    FECREGISTRO     DATE NOT NULL ,
    CEDJURCLIENTE   NUMBER (10) NOT NULL ,
    CONDICIONPAGO   VARCHAR2 (60 BYTE) NOT NULL ,
    CONDICIONVENTA  VARCHAR2 (60 BYTE) NOT NULL ,
    VIGENCIA        VARCHAR2 (30 BYTE) NOT NULL ,
    OBSERVACIONES   VARCHAR2 (100 BYTE) NOT NULL ,
    CODMONEDA       NUMBER (3) NOT NULL ,
    CODESTADOCOTIZ  NUMBER (3) NOT NULL ,
    CODLISTAPRECIOS NUMBER (3) NOT NULL ,
    MESENTREG       NUMBER (2) NOT NULL ,
    ANIOENTREG      NUMBER (4) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_COTIZACIONES_PK ON MVIALES.T_COTIZACIONES
  (
    NUMERO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_COTIZACIONES ADD CONSTRAINT T_COTIZACIONES_PK PRIMARY KEY ( NUMERO ) USING INDEX MVIALES.T_COTIZACIONES_PK ;

CREATE TABLE MVIALES.T_COTIZACIONESHISTO
  (
    NUMERO          NUMBER (10) NOT NULL ,
    FECREGISTRO     DATE NOT NULL ,
    CEDJURCLIENTE   NUMBER (10) NOT NULL ,
    CONDICIONPAGO   VARCHAR2 (60 BYTE) NOT NULL ,
    CONDICIONVENTA  VARCHAR2 (60 BYTE) NOT NULL ,
    VIGENCIA        VARCHAR2 (30 BYTE) NOT NULL ,
    OBSERVACIONES   VARCHAR2 (100 BYTE) NOT NULL ,
    CODMONEDA       NUMBER (3) NOT NULL ,
    CODESTADOCOTIZ  NUMBER (3) NOT NULL ,
    CODLISTAPRECIOS NUMBER (3) NOT NULL ,
    MESENTREG       NUMBER (2) NOT NULL ,
    ANIOENTREG      NUMBER (4) NOT NULL
  )
  PCTFREE 28 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 245760 NEXT 122880 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
ALTER TABLE MVIALES.T_COTIZACIONESHISTO ADD CONSTRAINT T_COTIZACIONESHISTO_PK PRIMARY KEY ( NUMERO ) USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE PROYECTO LOGGING STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT ) ;

CREATE TABLE MVIALES.T_COTIZACIONESTADOS
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_COTIZACIONESTADOS_PK ON MVIALES.T_COTIZACIONESTADOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_COTIZACIONESTADOS ADD CONSTRAINT T_COTIZACIONESTADOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_COTIZACIONESTADOS_PK ;

CREATE TABLE MVIALES.T_CUIDADES
  (
    CODCIUDAD    NUMBER (3) NOT NULL ,
    CODPROVINCIA NUMBER (3) NOT NULL ,
    NOMBRE       VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_CUIDADES_PK ON MVIALES.T_CUIDADES
  (
    CODCIUDAD ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_CUIDADES ADD CONSTRAINT T_CUIDADES_PK PRIMARY KEY ( CODCIUDAD ) USING INDEX MVIALES.T_CUIDADES_PK ;

CREATE TABLE MVIALES.T_DETALLEDIRECCION
  (
    CODDETALLE NUMBER (3) NOT NULL ,
    CODCIUDAD  NUMBER (3) NOT NULL ,
    APARPOSTAL VARCHAR2 (10 BYTE) NOT NULL ,
    DETALLE1   VARCHAR2 (50 BYTE) NOT NULL ,
    DETALLE2   VARCHAR2 (50 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_DETALLEDIRECCION_PK ON MVIALES.T_DETALLEDIRECCION
  (
    CODDETALLE ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_DETALLEDIRECCION ADD CONSTRAINT T_DETALLEDIRECCION_PK PRIMARY KEY ( CODDETALLE ) USING INDEX MVIALES.T_DETALLEDIRECCION_PK ;

CREATE TABLE MVIALES.T_EMPRESA
  (
    CEDULAJURIDICA  NUMBER (10) NOT NULL ,
    NOMBRECOMERCIAL NUMBER (20) NOT NULL ,
    DIRECCION       NUMBER (3) NOT NULL ,
    CODTIPOEMPRESA  NUMBER (3) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_EMPRESA_PK ON MVIALES.T_EMPRESA
  (
    CEDULAJURIDICA ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_EMPRESA ADD CONSTRAINT T_EMPRESA_PK PRIMARY KEY ( CEDULAJURIDICA ) USING INDEX MVIALES.T_EMPRESA_PK ;

CREATE TABLE MVIALES.T_ESTADOSTIPOCAMBIOS
  (
    CODIGO NUMBER (3) NOT NULL ,
    NOMBRE VARCHAR2 (1 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_ESTADOSTIPOCAMBIOS_PK ON MVIALES.T_ESTADOSTIPOCAMBIOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_ESTADOSTIPOCAMBIOS ADD CONSTRAINT T_ESTADOSTIPOCAMBIOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_ESTADOSTIPOCAMBIOS_PK ;

CREATE TABLE MVIALES.T_FACTURACOMPRAS
  (
    CODIGO          NUMBER (10) NOT NULL ,
    FECCOMPRA       DATE NOT NULL ,
    FECREGISTRO     DATE NOT NULL ,
    CODUSERREGISTRO VARCHAR2 (10 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_FACTURACOMPRAS_PK ON MVIALES.T_FACTURACOMPRAS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_FACTURACOMPRAS ADD CONSTRAINT T_FACTURACOMPRAS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_FACTURACOMPRAS_PK ;

CREATE TABLE MVIALES.T_FAMILIAS
  (
    CODIGO             NUMBER (3) NOT NULL ,
    DESCRIPCION        VARCHAR2 (40 BYTE) NOT NULL ,
    PORCIMPACOMPRA     NUMBER (3) NOT NULL ,
    CODINDICEECONOMICO NUMBER (3) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_FAMILIAS_PK ON MVIALES.T_FAMILIAS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_FAMILIAS ADD CONSTRAINT T_FAMILIAS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_FAMILIAS_PK ;

CREATE TABLE MVIALES.T_INDICEECONOMICOS
  (
    CODIGO           NUMBER (3) NOT NULL ,
    DESCRIPCION      VARCHAR2 (40 BYTE) NOT NULL ,
    NUMVALORESREALES NUMBER (10) NOT NULL ,
    NUMMESES         NUMBER (10) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;

CREATE TABLE MVIALES.T_LINEASFACTURACOMPRAS
  (
    CODFACTURA    NUMBER (10) NOT NULL ,
    CODARTICULO   VARCHAR2 (20 BYTE) NOT NULL ,
    PRECIODOLARES NUMBER (17,2) NOT NULL ,
    CANTIDAD      NUMBER (10) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_LINEASFACTURACOMPRAS_PK ON MVIALES.T_LINEASFACTURACOMPRAS
  (
    CODFACTURA ASC , CODARTICULO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_LINEASFACTURACOMPRAS ADD CONSTRAINT T_LINEASFACTURACOMPRAS_PK PRIMARY KEY ( CODFACTURA, CODARTICULO ) USING INDEX MVIALES.T_LINEASFACTURACOMPRAS_PK ;

CREATE TABLE MVIALES.T_MARCAS
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_MARCAS_PK ON MVIALES.T_MARCAS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_MARCAS ADD CONSTRAINT T_MARCAS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_MARCAS_PK ;

CREATE TABLE MVIALES.T_MESANIO
  (
    MES  NUMBER (2) NOT NULL ,
    ANIO NUMBER (4) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_MESANIO_PK ON MVIALES.T_MESANIO
  (
    MES ASC , ANIO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_MESANIO ADD CONSTRAINT T_MESANIO_PK PRIMARY KEY ( MES, ANIO ) USING INDEX MVIALES.T_MESANIO_PK ;

CREATE TABLE MVIALES.T_MONEDAS
  (
    CODIGO NUMBER (3) NOT NULL ,
    NOMBRE VARCHAR2 (10 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_MONEDAS_PK ON MVIALES.T_MONEDAS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_MONEDAS ADD CONSTRAINT T_MONEDAS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_MONEDAS_PK ;

CREATE TABLE MVIALES.T_PAISES
  (
    CODPAIS NUMBER (3) NOT NULL ,
    NOMBRE  NUMBER (10) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_PAISES_PK ON MVIALES.T_PAISES
  (
    CODPAIS ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_PAISES ADD CONSTRAINT T_PAISES_PK PRIMARY KEY ( CODPAIS ) USING INDEX MVIALES.T_PAISES_PK ;

CREATE TABLE MVIALES.T_PERMISOUSUARIOS
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_PERMISOUSUARIOS_PK ON MVIALES.T_PERMISOUSUARIOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_PERMISOUSUARIOS ADD CONSTRAINT T_PERMISOUSUARIOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_PERMISOUSUARIOS_PK ;

CREATE TABLE MVIALES.T_PROVINCIAS
  (
    CODPROVINCIA NUMBER (3) NOT NULL ,
    CODPAIS      NUMBER (3) NOT NULL ,
    NOMBRE       VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_PROVINCIAS_PK ON MVIALES.T_PROVINCIAS
  (
    CODPROVINCIA ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_PROVINCIAS ADD CONSTRAINT T_PROVINCIAS_PK PRIMARY KEY ( CODPROVINCIA ) USING INDEX MVIALES.T_PROVINCIAS_PK ;

CREATE TABLE MVIALES.T_TIPOCONTACTOS
  (
    CODTIPOCONTACTO NUMBER (3) NOT NULL ,
    NOMBRE          NUMBER (10) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_TIPOCONTACTOS_PK ON MVIALES.T_TIPOCONTACTOS
  (
    CODTIPOCONTACTO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_TIPOCONTACTOS ADD CONSTRAINT T_TIPOCONTACTOS_PK PRIMARY KEY ( CODTIPOCONTACTO ) USING INDEX MVIALES.T_TIPOCONTACTOS_PK ;

CREATE TABLE MVIALES.T_TIPOEMPRESA
  (
    CODTIPOEMPRESA NUMBER (3) NOT NULL ,
    NOMBRE         VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_TIPOEMPRESA_PK ON MVIALES.T_TIPOEMPRESA
  (
    CODTIPOEMPRESA ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_TIPOEMPRESA ADD CONSTRAINT T_TIPOEMPRESA_PK PRIMARY KEY ( CODTIPOEMPRESA ) USING INDEX MVIALES.T_TIPOEMPRESA_PK ;

CREATE TABLE MVIALES.T_TIPOERRORES
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (15 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_TIPOERRORES_PK ON MVIALES.T_TIPOERRORES
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_TIPOERRORES ADD CONSTRAINT T_TIPOERRORES_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_TIPOERRORES_PK ;

CREATE TABLE MVIALES.T_TIPOUSUARIOS
  (
    CODIGO         NUMBER (3) NOT NULL ,
    CODUSERPERMISO NUMBER (3) NOT NULL ,
    DESCRIPCION    VARCHAR2 (20 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_TIPOUSUARIOS_PK ON MVIALES.T_TIPOUSUARIOS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_TIPOUSUARIOS ADD CONSTRAINT T_TIPOUSUARIOS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_TIPOUSUARIOS_PK ;

CREATE TABLE MVIALES.T_UNIDADMEDIDAS
  (
    CODIGO      NUMBER (3) NOT NULL ,
    DESCRIPCION VARCHAR2 (40 BYTE) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_UNIDADMEDIDAS_PK ON MVIALES.T_UNIDADMEDIDAS
  (
    CODIGO ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_UNIDADMEDIDAS ADD CONSTRAINT T_UNIDADMEDIDAS_PK PRIMARY KEY ( CODIGO ) USING INDEX MVIALES.T_UNIDADMEDIDAS_PK ;

CREATE TABLE MVIALES.T_USUARIOS
  (
    NBRLOGIN    VARCHAR2 (10 BYTE) NOT NULL ,
    CLVLOGIN    VARCHAR2 (10 BYTE) NOT NULL ,
    CODUSERTIPO NUMBER (3) NOT NULL
  )
  PCTFREE 10 PCTUSED 40 TABLESPACE PROYECTO LOGGING STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  ) ;
CREATE UNIQUE INDEX MVIALES.T_USUARIOS_PK ON MVIALES.T_USUARIOS
  (
    NBRLOGIN ASC
  )
  TABLESPACE PROYECTO PCTFREE 10 STORAGE
  (
    INITIAL 1048576 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  LOGGING ;
  ALTER TABLE MVIALES.T_USUARIOS ADD CONSTRAINT T_USUARIOS_PK PRIMARY KEY ( NBRLOGIN ) USING INDEX MVIALES.T_USUARIOS_PK ;

ALTER TABLE MVIALES.T_ARTICULOSCOTIZADOS ADD CONSTRAINT FKT_ARTICULO382695 FOREIGN KEY ( CODARTICULO ) REFERENCES MVIALES.T_ARTICULOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOSCOTIZADOS ADD CONSTRAINT FKT_ARTICULO50573 FOREIGN KEY ( NUMCOTIZACION ) REFERENCES MVIALES.T_COTIZACIONES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOSCOTIZADOS ADD CONSTRAINT FKT_ARTICULO522199 FOREIGN KEY ( UNDMEDIDA ) REFERENCES MVIALES.T_UNIDADMEDIDAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOS ADD CONSTRAINT FKT_ARTICULO570863 FOREIGN KEY ( UNDMEDIDA ) REFERENCES MVIALES.T_UNIDADMEDIDAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOS ADD CONSTRAINT FKT_ARTICULO578076 FOREIGN KEY ( CODUSERREGISTRO ) REFERENCES MVIALES.T_USUARIOS ( NBRLOGIN ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOS ADD CONSTRAINT FKT_ARTICULO840016 FOREIGN KEY ( CODESTARTICULO ) REFERENCES MVIALES.T_ARTICULOESTADOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOS ADD CONSTRAINT FKT_ARTICULO848891 FOREIGN KEY ( CODMARCA ) REFERENCES MVIALES.T_MARCAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOS ADD CONSTRAINT FKT_ARTICULO904486 FOREIGN KEY ( CODFAMILIA ) REFERENCES MVIALES.T_FAMILIAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_BITACORA ADD CONSTRAINT FKT_BITACORA251134 FOREIGN KEY ( CODTIPOERROR ) REFERENCES MVIALES.T_TIPOERRORES ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_BITACORA ADD CONSTRAINT FKT_BITACORA84906 FOREIGN KEY ( CODUSER ) REFERENCES MVIALES.T_USUARIOS ( NBRLOGIN ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COMPONENTES ADD CONSTRAINT FKT_COMPONEN233783 FOREIGN KEY ( CODCOMPONENTE ) REFERENCES MVIALES.T_ARTICULOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COMPONENTES ADD CONSTRAINT FKT_COMPONEN774059 FOREIGN KEY ( CODARTICULO ) REFERENCES MVIALES.T_ARTICULOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_CONTACTO ADD CONSTRAINT FKT_CONTACTO536274 FOREIGN KEY ( CODEMPRESA ) REFERENCES MVIALES.T_EMPRESA ( CEDULAJURIDICA ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_CONTACTO ADD CONSTRAINT FKT_CONTACTO759656 FOREIGN KEY ( CODTIPOCONTACTO ) REFERENCES MVIALES.T_TIPOCONTACTOS ( CODTIPOCONTACTO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COTIZACIONES ADD CONSTRAINT FKT_COTIZACI344790 FOREIGN KEY ( MESENTREG, ANIOENTREG ) REFERENCES MVIALES.T_MESANIO ( MES, ANIO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COTIZACIONES ADD CONSTRAINT FKT_COTIZACI429323 FOREIGN KEY ( CEDJURCLIENTE ) REFERENCES MVIALES.T_EMPRESA ( CEDULAJURIDICA ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COTIZACIONES ADD CONSTRAINT FKT_COTIZACI656953 FOREIGN KEY ( CODMONEDA ) REFERENCES MVIALES.T_MONEDAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COTIZACIONES ADD CONSTRAINT FKT_COTIZACI717841 FOREIGN KEY ( CODESTADOCOTIZ ) REFERENCES MVIALES.T_COTIZACIONESTADOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_COTIZACIONES ADD CONSTRAINT FKT_COTIZACI920077 FOREIGN KEY ( CODLISTAPRECIOS ) REFERENCES MVIALES.T_LISTAPRECIOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_CUIDADES ADD CONSTRAINT FKT_CUIDADES473810 FOREIGN KEY ( CODPROVINCIA ) REFERENCES MVIALES.T_PROVINCIAS ( CODPROVINCIA ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_DETALLEDIRECCION ADD CONSTRAINT FKT_DETALLED350223 FOREIGN KEY ( CODCIUDAD ) REFERENCES MVIALES.T_CUIDADES ( CODCIUDAD ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_EMPRESA ADD CONSTRAINT FKT_EMPRESA228590 FOREIGN KEY ( CODTIPOEMPRESA ) REFERENCES MVIALES.T_TIPOEMPRESA ( CODTIPOEMPRESA ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_EMPRESA ADD CONSTRAINT FKT_EMPRESA469254 FOREIGN KEY ( DIRECCION ) REFERENCES MVIALES.T_DETALLEDIRECCION ( CODDETALLE ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_FACTURACOMPRAS ADD CONSTRAINT FKT_FACTURAC28973 FOREIGN KEY ( CODUSERREGISTRO ) REFERENCES MVIALES.T_USUARIOS ( NBRLOGIN ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_LINEASFACTURACOMPRAS ADD CONSTRAINT FKT_LINEASFA481568 FOREIGN KEY ( CODARTICULO ) REFERENCES MVIALES.T_ARTICULOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_LINEASFACTURACOMPRAS ADD CONSTRAINT FKT_LINEASFA50873 FOREIGN KEY ( CODFACTURA ) REFERENCES MVIALES.T_FACTURACOMPRAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_LISTAPRECIOXARTICULOS ADD CONSTRAINT FKT_LISTAPRE160880 FOREIGN KEY ( CODARTICULO ) REFERENCES MVIALES.T_ARTICULOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_LISTAPRECIOXARTICULOS ADD CONSTRAINT FKT_LISTAPRE78013 FOREIGN KEY ( CODLISTAPRECIO ) REFERENCES MVIALES.T_LISTAPRECIOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_PROVINCIAS ADD CONSTRAINT FKT_PROVINCI451632 FOREIGN KEY ( CODPAIS ) REFERENCES MVIALES.T_PAISES ( CODPAIS ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_PROYECCIONESLISTAPRECIOS ADD CONSTRAINT FKT_PROYECCI566293 FOREIGN KEY ( CODLISTAPRECIOS, CODARTICULO ) REFERENCES MVIALES.T_LISTAPRECIOXARTICULOS ( CODLISTAPRECIO, CODARTICULO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_PROYECCIONESLISTAPRECIOS ADD CONSTRAINT FKT_PROYECCI761595 FOREIGN KEY ( MES, ANIO ) REFERENCES MVIALES.T_MESANIO ( MES, ANIO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_TIPOCAMBIOS ADD CONSTRAINT FKT_TIPOCAMB620100 FOREIGN KEY ( CODMONEDA1 ) REFERENCES MVIALES.T_MONEDAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_TIPOCAMBIOS ADD CONSTRAINT FKT_TIPOCAMB620101 FOREIGN KEY ( CODMONEDA2 ) REFERENCES MVIALES.T_MONEDAS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_TIPOCAMBIOS ADD CONSTRAINT FKT_TIPOCAMB651026 FOREIGN KEY ( ESTADO ) REFERENCES MVIALES.T_ESTADOSTIPOCAMBIOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_TIPOCAMBIOS ADD CONSTRAINT FKT_TIPOCAMB923514 FOREIGN KEY ( MES, ANIO ) REFERENCES MVIALES.T_MESANIO ( MES, ANIO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_TIPOUSUARIOS ADD CONSTRAINT FKT_TIPOUSUA556339 FOREIGN KEY ( CODUSERPERMISO ) REFERENCES MVIALES.T_PERMISOUSUARIOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_USUARIOS ADD CONSTRAINT FKT_USUARIOS41238 FOREIGN KEY ( CODUSERTIPO ) REFERENCES MVIALES.T_TIPOUSUARIOS ( CODIGO ) NOT DEFERRABLE ;

ALTER TABLE MVIALES.T_ARTICULOSCOTIZADOSHISTO ADD CONSTRAINT PK_NUMCOTIZACIONHISTO FOREIGN KEY ( NUMCOTIZACION ) REFERENCES MVIALES.T_COTIZACIONESHISTO ( NUMERO ) NOT DEFERRABLE ;

CREATE OR REPLACE TRIGGER MVIALES.AFT_INS_PRECIOFAC_UPD_ARTIC 
    AFTER INSERT ON MVIALES.T_LINEASFACTURACOMPRAS 
    FOR EACH ROW 
begin
  
  UPDATE  t_articulos 
      SET CODUSERREGISTRO = 'admin',
          PRECIOMERCDOLARES = :NEW.precioDolares,
          FECHAACTPRECIO = sysdate
          WHERE CODIGO = :NEW.CODARTICULO;
 
end AFT_INS_PrecioFac_UPD_Artic; 
/



CREATE OR REPLACE TRIGGER MVIALES.BEF_DEL_COTIZ_INS_HISTO 
    BEFORE DELETE ON MVIALES.T_COTIZACIONES 
    FOR EACH ROW 
Declare
  -- Seleccionar las filas de la cotizacion
  cursor cursorArticulos is select numCotizacion,codArticulo,undMedida,cantidad,porcenDescuento,costoUnitario,costoGrabado,montoLinea 
  from T_ArticulosCotizados where numCotizacion = :Old.numero;
  -- Variables de cada fila
  Var_numCotizacion number(10);
  Var_codArticulo varchar(20);
  Var_undMedida number(3);
  Var_cantidad number(10);
  Var_porcenDescuento number(2);
  Var_costoUnitario number(17,2);
  Var_costoGrabado number(17,2);
  Var_montoLinea number(17,2);
begin
  -- Verificar estado emitida
  if (:OLD.codEstadoCotiz = 1) then
    -- Abrir cursor
    open cursorArticulos;
    loop
      -- Recorre filas
      fetch cursorArticulos into 
      Var_numCotizacion,
      Var_codArticulo,
      Var_undMedida,
      Var_cantidad,
      Var_porcenDescuento,
      Var_costoUnitario,
      Var_costoGrabado,
      Var_montoLinea;
      -- Guardar las filas en historico
         Insert into T_ArticulosCotizadosHisto values (Var_numCotizacion,Var_codArticulo,Var_undMedida,Var_cantidad,Var_porcenDescuento,Var_costoUnitario,Var_costoGrabado,Var_montoLinea);
     exit when cursorArticulos %notfound;
    end loop;
    close cursorArticulos;
    commit;
    -- guardar datos de la cotizacion
    Insert into T_CotizacionesHisto values (:OLD.numero,:OLD.fecRegistro,:OLD.cedJurCliente,:OLD.condicionPago,:OLD.condicionVenta,:OLD.vigencia,:OLD.Observaciones,:OLD.codMoneda,:OLD.codEstadoCotiz,:OLD.codListaPrecios,:OLD.mesEntreg,:OLD.anioEntreg);
    -- Registar evento en bitacora
    Insert into T_Bitacora values (15,1,3,SYSDATE);
  end if;
end; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_ARTICULOESTADOS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_ARTICULOESTADOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_ARTICULOESTADOS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_BITACORA_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_BITACORA 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_BITACORA_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_CONTACTO_CODCONTACTO_TRG 
    BEFORE INSERT ON MVIALES.T_CONTACTO 
    FOR EACH ROW 
    WHEN ( NEW.CODCONTACTO IS NULL ) 
BEGIN :NEW.CODCONTACTO := MVIALES.T_CONTACTO_CODCONTACTO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_COTIZACIONESTADOS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_COTIZACIONESTADOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_COTIZACIONESTADOS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_COTIZACIONES_NUMERO_TRG 
    BEFORE INSERT ON MVIALES.T_COTIZACIONES 
    FOR EACH ROW 
    WHEN ( NEW.NUMERO IS NULL ) 
BEGIN :NEW.NUMERO := MVIALES.T_COTIZACIONES_NUMERO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_CUIDADES_CODCIUDAD_TRG 
    BEFORE INSERT ON MVIALES.T_CUIDADES 
    FOR EACH ROW 
    WHEN ( NEW.CODCIUDAD IS NULL ) 
BEGIN :NEW.CODCIUDAD := MVIALES.T_CUIDADES_CODCIUDAD_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_DETALLEDIRECCION_CODDETALLE 
    BEFORE INSERT ON MVIALES.T_DETALLEDIRECCION 
    FOR EACH ROW 
    WHEN ( NEW.CODDETALLE IS NULL ) 
BEGIN :NEW.CODDETALLE := MVIALES.T_DETALLEDIRECCION_CODDETALLE.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_ESTADOSTIPOCAMBIOS_CODIGO 
    BEFORE INSERT ON MVIALES.T_ESTADOSTIPOCAMBIOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_ESTADOSTIPOCAMBIOS_CODIGO.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_FACTURACOMPRAS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_FACTURACOMPRAS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_FACTURACOMPRAS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_FAMILIAS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_FAMILIAS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_FAMILIAS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_INDICEECONOMICOS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_INDICEECONOMICOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_INDICEECONOMICOS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_LISTAPRECIOS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_LISTAPRECIOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_LISTAPRECIOS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_MARCAS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_MARCAS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_MARCAS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_MONEDAS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_MONEDAS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_MONEDAS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_PAISES_CODPAIS_TRG 
    BEFORE INSERT ON MVIALES.T_PAISES 
    FOR EACH ROW 
    WHEN ( NEW.CODPAIS IS NULL ) 
BEGIN :NEW.CODPAIS := MVIALES.T_PAISES_CODPAIS_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_PERMISOUSUARIOS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_PERMISOUSUARIOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_PERMISOUSUARIOS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_PROVINCIAS_CODPROVINCIA_TRG 
    BEFORE INSERT ON MVIALES.T_PROVINCIAS 
    FOR EACH ROW 
    WHEN ( NEW.CODPROVINCIA IS NULL ) 
BEGIN :NEW.CODPROVINCIA := MVIALES.T_PROVINCIAS_CODPROVINCIA_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_TIPOCONTACTOS_CODTIPOCONTACT 
    BEFORE INSERT ON MVIALES.T_TIPOCONTACTOS 
    FOR EACH ROW 
    WHEN ( NEW.CODTIPOCONTACTO IS NULL ) 
BEGIN :NEW.CODTIPOCONTACTO := MVIALES.T_TIPOCONTACTOS_CODTIPOCONTACT.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_TIPOEMPRESA_CODTIPOEMPRESA 
    BEFORE INSERT ON MVIALES.T_TIPOEMPRESA 
    FOR EACH ROW 
    WHEN ( NEW.CODTIPOEMPRESA IS NULL ) 
BEGIN :NEW.CODTIPOEMPRESA := MVIALES.T_TIPOEMPRESA_CODTIPOEMPRESA.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_TIPOERRORES_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_TIPOERRORES 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_TIPOERRORES_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_TIPOUSUARIOS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_TIPOUSUARIOS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_TIPOUSUARIOS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE TRIGGER MVIALES.T_UNIDADMEDIDAS_CODIGO_TRG 
    BEFORE INSERT ON MVIALES.T_UNIDADMEDIDAS 
    FOR EACH ROW 
    WHEN ( NEW.CODIGO IS NULL ) 
BEGIN :NEW.CODIGO := MVIALES.T_UNIDADMEDIDAS_CODIGO_SEQ.NEXTVAL;
END; 
/



CREATE OR REPLACE PACKAGE BODY MVIALES.MYWEBSERVICE1_PLSQL_WRAPPER
IS
FUNCTION PL_TO_SQL0(
    aPlsqlItem PKG_ARTICULO.RECARTICULO)
  RETURN MYWEBSERVICE1_RECARTICULO
IS
  aSqlItem MYWEBSERVICE1_RECARTICULO;
BEGIN
  -- initialize the object
  aSqlItem             := MYWEBSERVICE1_RECARTICULO(NULL, NULL);
  aSqlItem.CODIGO      := aPlsqlItem.CODIGO;
  aSqlItem.DESCRIPCION := aPlsqlItem.DESCRIPCION;
  RETURN aSqlItem;
END PL_TO_SQL0;
FUNCTION SQL_TO_PL0(
    aSqlItem MYWEBSERVICE1_RECARTICULO)
  RETURN PKG_ARTICULO.RECARTICULO
IS
  aPlsqlItem PKG_ARTICULO.RECARTICULO;
BEGIN
  aPlsqlItem.CODIGO      := aSqlItem.CODIGO;
  aPlsqlItem.DESCRIPCION := aSqlItem.DESCRIPCION;
  RETURN aPlsqlItem;
END SQL_TO_PL0;
END MyWebService1_plsql_wrapper;
/

CREATE OR REPLACE PACKAGE BODY MVIALES.PKG_ARTICULO
AS
  -- -------------------------------------------------------------------------
  -- DEFINE TIPOS VISIBLES
  -- -------------------------------------------------------------------------
  CURSOR CURARTICULO
    RETURN RECARTICULO
  IS
    SELECT TA.CODIGO, TA.DESCRIPCION FROM T_ARTICULOS TA;
  -- -------------------------------------------------------------------------
  -- Insercion Articulos
  -- -------------------------------------------------------------------------
PROCEDURE SP_InsertarArticulo(
    IN_CODIGO            IN VARCHAR2,
    IN_DESCRIPCION       IN VARCHAR2,
    IN_UNDMEDIDA         IN NUMBER,
    IN_CODMARCA          IN NUMBER,
    IN_MODELO            IN VARCHAR2,
    IN_CODFAMILIA        IN NUMBER,
    IN_CODESTARTICULO    IN NUMBER,
    IN_CODUSERREGISTRO   IN VARCHAR2,
    IN_CANTIDAD          IN NUMBER,
    IN_CANTMAXIMA        IN NUMBER,
    IN_CANTMINIMA        IN NUMBER,
    IN_PRECIOMERCDOLARES IN NUMBER)
AS
BEGIN
  INSERT
  INTO t_articulos
    (
      CODIGO,
      DESCRIPCION,
      UNDMEDIDA,
      CODMARCA,
      MODELO,
      FECREGISTRO,
      CODFAMILIA,
      CODESTARTICULO,
      CODUSERREGISTRO,
      CANTIDAD,
      CANTMAXIMA,
      CANTMINIMA,
      PRECIOMERCDOLARES,
      FECHAACTPRECIO
    )
    VALUES
    (
      IN_CODIGO,
      IN_DESCRIPCION,
      IN_UNDMEDIDA,
      IN_CODMARCA,
      IN_MODELO,
      sysdate,
      IN_CODFAMILIA,
      IN_CODESTARTICULO,
      IN_CODUSERREGISTRO,
      IN_CANTIDAD,
      IN_CANTMAXIMA,
      IN_CANTMINIMA,
      IN_PRECIOMERCDOLARES,
      sysdate
    );
END;
-- -------------------------------------------------------------------------
-- Insercion Componentes
-- Requiere el codigo de componente y el codigo del articulo al cual se asociara, e.g execute SP_INSERTARCOMPONENTE('FTCO2175','INCOHO');
-- -------------------------------------------------------------------------
PROCEDURE SP_InsertarComponente
  (
    IN_CODIGOCOMPONENTE IN VARCHAR2,
    IN_CODIGOARTICULO   IN VARCHAR2
  )
AS
BEGIN
  INSERT
  INTO t_componentes
    (
      CODCOMPONENTE,
      CODARTICULO
    )
    VALUES
    (
      IN_CODIGOCOMPONENTE,
      IN_CODIGOARTICULO
    );
END;
-- -------------------------------------------------------------------------
-- Modificacion Articulos
-- Requiere el codigo de articulo por modificar, el usuario e.g 'admin' y el precio nuevo en dolares, la fecha se cambia sola, e.g execute SP_ModificarArticulo('MOCO4075','admin',200);
-- -------------------------------------------------------------------------
PROCEDURE SP_ModificarArticulo
  (
    IN_CODIGO            IN VARCHAR2,
    IN_CODUSERREGISTRO   IN VARCHAR2,
    IN_PRECIOMERCDOLARES IN NUMBER
  )
AS
BEGIN
  UPDATE t_articulos
  SET CODUSERREGISTRO = IN_CODUSERREGISTRO,
    PRECIOMERCDOLARES = IN_PRECIOMERCDOLARES,
    FECHAACTPRECIO    = sysdate
  WHERE CODIGO        = IN_CODIGO;
END;
-- -------------------------------------------------------------------------
-- Modificacion Componentes
-- Requiere el codigo de componente por modificar y el codigo nuevo del articulo al cual se asociara, e.g execute SP_MODIFICARCOMPONENTE('FP110','SL02.8G08ME500SSD');
-- -------------------------------------------------------------------------
PROCEDURE SP_ModificarComponente(
    IN_CODCOMPONENTE IN VARCHAR2,
    IN_CODARTICULO   IN VARCHAR2)
AS
BEGIN
  UPDATE t_componentes
  SET CODARTICULO     = IN_CODARTICULO
  WHERE CODCOMPONENTE = IN_CODCOMPONENTE;
END;
-- -------------------------------------------------------------------------
-- Borrado Articulo
-- -------------------------------------------------------------------------
-- -------------------------------------------------------------------------
-- Borrado Componente
-- Si se desea borrar solo una linea en especifico (un componente esta asociado a un articulo X) se pasa de parametro el codigo del componente por eliminar y el codigo del articulo asociado, e.g execute SP_BORRARCOMPONENTE('FTCO2175','SL02.8G08ME500SSD');
-- Si se desea borrar todas las entradas donde se encuentr el componente se pasa de parametro el codigo del componente por eliminar y un parametro null ('') como segundo parametro, e.g execute SP_BorrarComponente('FTCO2175','');
-- -------------------------------------------------------------------------
PROCEDURE SP_BorrarComponente(
    IN_CODCOMPONENTE IN VARCHAR2,
    IN_CODARTICULO   IN VARCHAR2)
AS
BEGIN
  IF(IN_CODARTICULO IS NULL) THEN
    DELETE FROM t_componentes WHERE CODCOMPONENTE = IN_CODCOMPONENTE;
  ELSE
    DELETE
    FROM t_componentes
    WHERE CODCOMPONENTE = IN_CODCOMPONENTE
    AND CODARTICULO     = IN_CODARTICULO;
  END IF;
END;
-- -------------------------------------------------------------------------
-- Obtener Articulos
-- -------------------------------------------------------------------------
PROCEDURE SP_GetArticulos
IS
  Var_codArticulo     VARCHAR2(20);
  Var_descripcion     VARCHAR2(40);
  Var_codUnidMed      VARCHAR2(40);
  Var_codMarca        NUMBER(3);
  Var_modelo          VARCHAR2(15);
  Var_fechaReg        DATE;
  Var_codFamilia      NUMBER(3);
  Var_codEstArticulo  NUMBER(3);
  Var_codUserRegistro VARCHAR2(10);
  Var_Cant            NUMBER(10);
  Var_CantMax         NUMBER(10);
  Var_CantMin         NUMBER(10);
  Var_PrecioMerDolar  NUMBER(17,2);
  Var_FechaActPrecio  DATE;
  CURSOR cursorArticulos
  IS
    SELECT codigo,
      descripcion,
      undMedida,
      codMarca,
      modelo,
      fecRegistro,
      codFamilia,
      codEstArticulo,
      codUserRegistro,
      cantidad,
      cantMaxima,
      cantMinima,
      precioMercDolares,
      fechaActPrecio
    FROM t_articulos;
BEGIN
  OPEN cursorArticulos;
  LOOP
    FETCH cursorArticulos
    INTO Var_codArticulo,
      Var_descripcion,
      Var_codUnidMed,
      Var_codMarca,
      Var_modelo,
      Var_fechaReg,
      Var_codFamilia,
      Var_codEstArticulo,
      Var_codUserRegistro,
      Var_Cant,
      Var_CantMax,
      Var_CantMin,
      Var_PrecioMerDolar,
      Var_FechaActPrecio;
    EXIT
  WHEN cursorArticulos %notfound;
    --DBMS_OUTPUT.PUT_LINE(Var_descripcion); --solo para verifcar
  END LOOP;
  CLOSE cursorArticulos;
  COMMIT;
END SP_GetArticulos;
-- -------------------------------------------------------------------------
-- Obtener Componenetes
-- -------------------------------------------------------------------------
PROCEDURE SP_GetComponentes
IS
  Var_codComponente VARCHAR2(20);
  Var_codArticulo   VARCHAR2(20);
  CURSOR cursorComponentes
  IS
    SELECT codComponente,codArticulo FROM t_componentes;
BEGIN
  OPEN cursorComponentes;
  LOOP
    FETCH cursorComponentes INTO Var_codComponente,Var_codArticulo;
    EXIT
  WHEN cursorComponentes %notfound;
    DBMS_OUTPUT.PUT_LINE(Var_codComponente); --solo para verifcar
  END LOOP;
  CLOSE cursorComponentes;
  COMMIT;
END SP_GetComponentes;
-- ============================================================================================
-- TESTING RETURNS
-- ============================================================================================
FUNCTION FUN_GETARTICULOS_V3
  RETURN RECARTICULO
IS
  LISTAARTICULOS RECARTICULO;
BEGIN
  OPEN CURARTICULO;
  LOOP
    FETCH CURARTICULO INTO LISTAARTICULOS;
  END LOOP;
  CLOSE CURARTICULO;
  RETURN LISTAARTICULOS;
END;
-- ============================================================================================
END PKG_Articulo;
/

CREATE OR REPLACE PACKAGE BODY MVIALES.WSPLSQL_PLSQL_WRAPPER
IS
FUNCTION PL_TO_SQL0(
    aPlsqlItem PKG_ARTICULO.RECARTICULO)
  RETURN WSPLSQL_RECARTICULO
IS
  aSqlItem WSPLSQL_RECARTICULO;
BEGIN
  -- initialize the object
  aSqlItem             := WSPLSQL_RECARTICULO(NULL, NULL);
  aSqlItem.CODIGO      := aPlsqlItem.CODIGO;
  aSqlItem.DESCRIPCION := aPlsqlItem.DESCRIPCION;
  RETURN aSqlItem;
END PL_TO_SQL0;
FUNCTION SQL_TO_PL0(
    aSqlItem WSPLSQL_RECARTICULO)
  RETURN PKG_ARTICULO.RECARTICULO
IS
  aPlsqlItem PKG_ARTICULO.RECARTICULO;
BEGIN
  aPlsqlItem.CODIGO      := aSqlItem.CODIGO;
  aPlsqlItem.DESCRIPCION := aSqlItem.DESCRIPCION;
  RETURN aPlsqlItem;
END SQL_TO_PL0;
END WSPLSQL_plsql_wrapper;
/

CREATE SEQUENCE MVIALES.MVIALES.T_ARTICULOESTADOS_CODI START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_BITACORA_CODIGO_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_CONTACTO_CODCONTACTO START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_COTIZACIONES_NUMERO_ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_COTIZACIONESTADOS_CO START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_CUIDADES_CODCIUDAD_S START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_DETALLEDIRECCION_COD START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_ESTADOSTIPOCAMBIOS_C START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_FACTURACOMPRAS_CODIG START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_FAMILIAS_CODIGO_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_INDICEECONOMICOS_COD START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_LISTAPRECIOS_CODIGO_ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_MARCAS_CODIGO_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_MONEDAS_CODIGO_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_PAISES_CODPAIS_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_PERMISOUSUARIOS_CODI START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_PROVINCIAS_CODPROVIN START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_TIPOCONTACTOS_CODTIP START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_TIPOEMPRESA_CODTIPOE START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_TIPOERRORES_CODIGO_S START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_TIPOUSUARIOS_CODIGO_ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE MVIALES.MVIALES.T_UNIDADMEDIDAS_CODIGO START WITH 1 NOCACHE ORDER ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            34
-- CREATE INDEX                            28
-- ALTER TABLE                             68
-- CREATE VIEW                              0
-- CREATE PACKAGE                           3
-- CREATE PACKAGE BODY                      3
-- CREATE PROCEDURE                        12
-- CREATE FUNCTION                          2
-- CREATE TRIGGER                          24
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   2
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         1
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         67
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          1
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
